[tool.poetry]
name = "rise"
version = "0.3.0"
description = "A project to manage a Rise of Kingdoms kingdom"
authors = ["Felipe Bastos <felipe.bastosn@gmail.com>"]
license = "GPL-3.0"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
Django = "^5.2.0"
django-simple-captcha = "^0.6.2"
python-dotenv = "^1.1.0"
gunicorn = "^23.0.0"
mysqlclient = "^2.2.7"
docutils = "^0.21.2"
django-admin-rangefilter = "^0.13.2"
djangorestframework = "^3.16.0"
markdown = "^3.8"
django-filter = "^25.1"
djoser = "^2.3.1"
djangorestframework-simplejwt = "^5.5.0"


[tool.poetry.group.dev.dependencies]
pylint = "^3.3.7"
pytest = "^8.3.5"
autopep8 = "^2.3.2"
black = "^25.1.0"
requests = "^2.32.3"
pylint-django = "^2.6.1"
pytest-cov = "^6.1.1"
isort = "^6.0.1"
taskipy = "^1.14.1"
bandit = "^1.8.3"
pre-commit = "^4.2.0"
pip-audit = "^2.9.0"
prospector = "^1.16.1"


[tool.poetry.group.doc.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.13"
mkdocstrings = {extras = ["python"], version = "^0.29.1"}


[tool.taskipy.tasks]
audit = { cmd = 'pip-audit', help = 'Verifica falhas de segurança das dependências do projeto' }
coverage = { cmd = 'pytest --cov', help = 'Verifica a cobertura de testes' }
dev = { cmd = 'python manage.py runserver', help = 'Servidor de desenvolvimento' }
format = { cmd = 'black .', help = 'Formata o código' }
imports = { cmd = 'isort .', help = 'Organiza os imports do projeto' }
lint = { cmd = 'pylint -f text . > linter-report.txt', help = 'Checagem estática' }
makemigrations = { cmd = 'python manage.py makemigrations', help = 'Atualiza as migrações.' }
migrate = { cmd = 'python manage.py migrate', help = 'Aplica as migrações.' }
onboard = { cmd = 'pre-commit install', help = 'Instala os hooks de pre-commit' }
requirements = { cmd = 'poetry export -o requirements.txt', help = 'Exporta o requirements.txt' }
secure = { cmd = 'bandit -r kvk bank config equipments items mge osiris players reports rise tasks', help = 'Gera relatório de falhas de segurança no código.' }
test = { cmd = 'python manage.py test', help = 'Executa os testes' }


[tool.isort]
profile = "black"

[tool.black]
include = '\.pyi?$'


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
