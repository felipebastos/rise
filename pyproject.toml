[tool.poetry]
name = "rise"
version = "0.3.0"
description = "A project to manage a Rise of Kingdoms kingdom"
authors = ["Felipe Bastos <felipe.bastosn@gmail.com>"]
license = "GPL-3.0"

[tool.poetry.dependencies]
python = "^3.10"
Django = "^5.1.0"
django-simple-captcha = "^0.5.14"
python-dotenv = "^0.19.2"
gunicorn = "^20.1.0"
mysqlclient = "^2.1.1"
docutils = "^0.20.1"
django-admin-rangefilter = "^0.13.2"
djangorestframework = "^3.15.2"
markdown = "^3.7"
django-filter = "^24.3"
djoser = "^2.2.3"
djangorestframework-simplejwt = "^5.3.1"


[tool.poetry.group.dev.dependencies]
pylint = "^2.9.2"
pytest = "^6.2.4"
autopep8 = "^1.5.7"
black = "^22.3"
requests = "^2.27.1"
pylint-django = "^2.5.3"
pytest-cov = "^4.0.0"
isort = "^5.12.0"
taskipy = "^1.10.3"
bandit = "^1.7.4"
pre-commit = "^3.1.1"
pip-audit = "^2.5.4"
prospector = "^1.9.0"


[tool.poetry.group.doc.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.2"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}


[tool.taskipy.tasks]
audit = { cmd = 'pip-audit', help = 'Verifica falhas de segurança das dependências do projeto' }
coverage = { cmd = 'pytest --cov', help = 'Verifica a cobertura de testes' }
dev = { cmd = 'python manage.py runserver', help = 'Servidor de desenvolvimento' }
format = { cmd = 'black .', help = 'Formata o código' }
imports = { cmd = 'isort .', help = 'Organiza os imports do projeto' }
lint = { cmd = 'pylint -f text . > linter-report.txt', help = 'Checagem estática' }
makemigrations = { cmd = 'python manage.py makemigrations', help = 'Atualiza as migrações.' }
migrate = { cmd = 'python manage.py migrate', help = 'Aplica as migrações.' }
onboard = { cmd = 'pre-commit install', help = 'Instala os hooks de pre-commit' }
requirements = { cmd = 'poetry export -o requirements.txt', help = 'Exporta o requirements.txt' }
secure = { cmd = 'bandit -r kvk bank config equipments items mge osiris players reports rise tasks', help = 'Gera relatório de falhas de segurança no código.' }
test = { cmd = 'python manage.py test', help = 'Executa os testes' }


[tool.isort]
profile = "black"

[tool.black]
include = '\.pyi?$'


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
